#!/usr/bin/env bash
# -*- TT -*-

[% INCLUDE ErrorHandling.tt %]
[% INCLUDE Logging.tt job_name="Manta" main_step=joint_name log_name="Manta_${joint_name}.log" %]

cd "[% opt.OUTPUT_DIR %]"

assert_not_empty "[% sample_bam %]"
[% IF opt.SV_MODE == "sample_control" %]
assert_not_empty "[% control_bam %]"
[% opt.MANTA_PATH %]/configManta.py --referenceFasta "[% opt.GENOME %]" --runDir "[% dirs.out %]" --normalBam "[% control_bam %]" --tumorBam "[% sample_bam %]"
[% ELSE %]
[% opt.MANTA_PATH %]/configManta.py --referenceFasta "[% opt.GENOME %]" --runDir "[% dirs.out %]" --bam "[% sample_bam %]"
[% END %]

[% dirs.out %]/runWorkflow.py -m local -j [% opt.MANTA_THREADS %]

assert_not_empty "[% dirs.out %]/results/variants/diploidSV.vcf.gz.tbi"
[%- IF opt.SV_MODE == "sample_control" %]
assert_not_empty "[% dirs.out %]/results/variants/somaticSV.vcf.gz.tbi"

/usr/java/latest/bin/java -Xmx[% opt.BPI_MEM %]G \
    -jar "[% opt.BPI_PATH %]/break-point-inspector.jar" \
    -ref "[% control_bam %]" \
    -tumor "[% sample_bam %]" \
    -vcf "[% dirs.out %]/results/variants/somaticSV.vcf.gz" \
    -ref_slice "[% dirs.out %]/results/variants/ref_sv_slice.bam" \
    -tumor_slice "[% dirs.out %]/results/variants/tumor_sv_slice.bam" \
    -output_vcf "[% dirs.out %]/results/variants/somaticSV_bpi.vcf" \
    > "[% dirs.out %]/results/variants/bpi_stats.tsv"

assert_not_empty "[% dirs.out %]/results/variants/bpi_stats.tsv"

[%- END %]
[ "$(cat "[% dirs.out %]/workflow.exitcode.txt")" == "0" ] || failure "Manta workflow logged non-zero exit code."

success
