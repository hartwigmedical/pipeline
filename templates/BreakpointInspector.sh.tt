#!/usr/bin/env bash
# -*- TT -*-

[% INCLUDE ErrorHandling.tt %]
[% INCLUDE Logging.tt job_name="BreakpointInspector" main_step=joint_name log_name="BPI_${joint_name}.log" %]

echo "[INFO] Running BPI for [% joint_name %] - $(date)"

# KODU: Remove the output directory, relevant when we are in rerun-mode.
rm -f "[% dirs.out %]"

java -Xmx[% opt.BPI_MEM %]G -Djava.io.tmpdir=[% dirs.tmp %] -jar "[% opt.BPI_PATH %]/break-point-inspector.jar" \
    -ref_bam "[% ref_sample_bam %]" \
    -tumor_bam "[% tumor_sample_bam %]" \
    -input_vcf "[% input_vcf %]" \
    -contamination_fraction [% opt.BPI_CONTAMINATION_FRACTION %] \
    -ref_bam_sliced_output "[% dirs.out %]/[% ref_sample %]_sliced.bam" \
    -tumor_bam_sliced_output "[% dirs.out %]/[% tumor_sample %]_sliced.bam" \
    -output_vcf "[% opt.STRUCTURAL_VARIANT_VCF %]" \
    -output_tsv "[% dirs.out %]/[% joint_name %]_bpi_stats.tsv"

assert_not_empty "[% dirs.out %]/[% joint_name %]_bpi_stats.tsv"

## KODU: Do a final zip and tabix, and remove the initial index.

[% opt.TABIX_PATH %]/bgzip -f "[% opt.STRUCTURAL_VARIANT_VCF %]"
[% opt.TABIX_PATH %]/tabix -p vcf "[% opt.STRUCTURAL_VARIANT_VCF %].gz"

rm "[% opt.STRUCTURAL_VARIANT_VCF %]".idx

assert_not_empty "[% opt.STRUCTURAL_VARIANT_VCF %].gz"

success
