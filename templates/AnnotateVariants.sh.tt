#!/bin/bash
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#


bash [% opt.CLUSTER_PATH %]/settings.sh

cd [% opt.OUTPUT_DIR %]

echo "Start variant annotation	" `date` "	[% invcf %]	" `uname -n` >> [% opt.OUTPUT_DIR %]/logs/[% runName %].log

[% IF opt.ANNOTATE_SNPEFF == 'yes' %]
### SnpEff prediction and annotation
	[% outvcf = invcf %]
	[% outvcf = outvcf.replace('.vcf', '_snpEff.vcf') %]

	if [ -s [% invcf %] ]; then
		java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp -jar [% opt.SNPEFF_PATH %]/snpEff.jar -c [% opt.SNPEFF_PATH %]/snpEff.config  [% opt.ANNOTATE_DB %] -v [% invcf %] [% opt.ANNOTATE_FLAGS %] > [% outvcf %]
		[% opt.IGVTOOLS_PATH %]/igvtools index [% outvcf %]
		rm igv.log
	else
		echo "ERROR: [% invcf %] does not exist." >&2
	fi

	[% invcf = outvcf %]
[% END %]

[% IF opt.ANNOTATE_SNPSIFT == 'yes' %]
### SnpSift DBNSFP, add annotation from multiple sources
	[% outvcf = invcf %]
	[% outvcf = outvcf.replace('.vcf', '_snpSift.vcf') %]

	if [ -s [% invcf %] ]; then
        	java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp -jar [% opt.SNPEFF_PATH %]/SnpSift.jar dbnsfp -v -f [% opt.ANNOTATE_FIELDS %] -db [% opt.ANNOTATE_DBNSFP %] [% invcf %] > [% outvcf %]
        	[% opt.IGVTOOLS_PATH %]/igvtools index [% outvcf %]
		rm igv.log
	else
		echo "ERROR: [% invcf %] does not exist." >&2
	fi
	[% IF opt.ANNOTATE_SNPEFF == 'yes' %]
	if [ -s [% outvcf %] ]; then
		rm [% invcf %] [% invcf %].idx
	fi
	[% END %]
	[% invcf = outvcf %]
[% END %]

[% IF opt.ANNOTATE_IDFIELD == 'yes' %]
### Add ID from a vcf, for example Cosmic
	[% outvcf = invcf %]
	[% suffix = '_' _ opt.ANNOTATE_IDNAME _ '.vcf' %]
	[% outvcf = outvcf.replace('.vcf', suffix) %]
	if [ -s [% invcf %] ]; then
        	java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp -jar [% opt.GATK_PATH %]/GenomeAnalysisTK.jar -T VariantAnnotator -nt [% opt.ANNOTATE_THREADS %] -R [% opt.GENOME %] -o [% outvcf %] \
			 --variant [% invcf %] --dbsnp [% opt.ANNOTATE_IDDB %] --alwaysAppendDbsnpId
	else
		echo "ERROR: [% invcf %] does not exist." >&2
	fi
	[% IF opt.ANNOTATE_SNPSIFT == 'yes' %]
	if [ -s [% outvcf %] ]; then
		rm [% invcf %] [% invcf %].idx
	fi
	[% END %]
	[% invcf = outvcf %]
[% END %]

[% IF opt.ANNOTATE_FREQUENCIES == 'yes' %]
### Add frequencies from a vcf, for example GoNL
	[% outvcf = invcf %]
	[% suffix = '_' _ opt.ANNOTATE_FREQNAME _ '.vcf' %]
	[% outvcf = outvcf.replace('.vcf', suffix) %]
	if [ -s [% invcf %] ]; then
		java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp -jar [% opt.SNPEFF_PATH %]/SnpSift.jar annotate -tabix -name [% opt.ANNOTATE_FREQNAME %]_ -info [% opt.ANNOTATE_FREQINFO %] [% opt.ANNOTATE_FREQDB %] [% invcf %] > [% outvcf %]
		[% opt.IGVTOOLS_PATH %]/igvtools index [% outvcf %]
		rm igv.log
	else
		echo "ERROR: [% invcf %] does not exist." >&2
	fi
	[% IF opt.ANNOTATE_SNPSIFT == 'yes' OR opt.ANNOTATE_SNPEFF == 'yes' OR opt.ANNOTATE_IDFIELD == 'yes' %]
	if [ -s [% outvcf %] ]; then
		rm [% invcf %] [% invcf %].idx
	fi
	[% END %]
	[% invcf = outvcf %]
[% END %]

### KODU: Slice the final annotated VCF for CPCT purposes.
[% slicedvcf = invcf.replace('.vcf', '_sliced.vcf') %]
java -Xmx8G -jar [% opt.SNPEFF_PATH %]/SnpSift.jar intervals [% opt.IAP_PATH %]/settings/slicing/CPCT_Slicing.bed -i [% invcf %] > [% slicedvcf %]

### Check final vcf, last chr and start position must be identical.
if [ -s [% preAnnotateVCF %] -a -s [% outvcf %] -a "$(tail -n 1 [% preAnnotateVCF %] | cut -f 1,2)" = "$(tail -n 1 [% outvcf %] | cut -f 1,2)" ]; then
	touch [% opt.OUTPUT_DIR %]/logs/VariantAnnotation.done
fi

echo "End variant annotation	" `date` "	[% invcf %]	" `uname -n` >> [% opt.OUTPUT_DIR %]/logs/[% runName %].log
