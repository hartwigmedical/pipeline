#!/usr/bin/env bash
# -*- TT -*-
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

[% INCLUDE ErrorHandling.tt mode=opt.JOB_ERROR_MODE %]

export JOB_NAME JOB_SET JOB_START
JOB_NAME=PileUp
JOB_SET="[% opt.RUN_NAME %]"
JOB_START=$(date +%s)

cd [% opt.OUTPUT_DIR %]/[% sample %]/tmp

echo "Start pileup $(date) [% bam %] $(uname -n)" >> [% opt.OUTPUT_DIR %]/[% sample %]/logs/[% sample %].log

if [ -s [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] ]
then
  [% INCLUDE Status.tt step=sample status="processing" %]

  PATH=[% opt.SAMTOOLS_PATH %]:$PATH
  export PATH

  # divide threads between sambamba/samtools and pbgzip conservatively (ensure zip can keep up)
  # worker threads are favoured over compression threads (PILEUP_DIVISOR - 1):1 => PILEUP_THREADS >= PILEUP_DIVISOR
  # this heurestic needs modifying if the sambamba log shows "[chunk waiting for dump queue]"
  # shellcheck disable=SC2017
  MPILEUP_THREADS=$(([% opt.PILEUP_THREADS %] / [% opt.PILEUP_DIVISOR %] * ([% opt.PILEUP_DIVISOR %] - 1) + [% opt.PILEUP_THREADS %] % [% opt.PILEUP_DIVISOR %]))
  PBGZIP_THREADS=$(([% opt.PILEUP_THREADS %] / [% opt.PILEUP_DIVISOR %]))
  echo "Using ${MPILEUP_THREADS} threads for mpileup and ${PBGZIP_THREADS} threads for compression" >> [% opt.OUTPUT_DIR %]/[% sample %]/logs/[% sample %].log

  [% opt.SAMBAMBA_PATH %]/sambamba mpileup -t ${MPILEUP_THREADS} --tmpdir=[% opt.OUTPUT_DIR %]/[% sample %]/tmp/ [% IF opt.exists('SOMVAR_TARGETS') %]-L [% opt.SOMVAR_TARGETS %][% END %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] --samtools "-q 1 -f [% opt.GENOME %]" | [% opt.PBGZIP_PATH %]/pbgzip -n ${PBGZIP_THREADS} -c > [% pileup %].gz
  [% opt.TABIX_PATH %]/tabix -s 1 -b 2 -e 2 [% pileup %].gz

  tail_pileup="$([% opt.TABIX_PATH %]/tabix [% pileup %].gz MT | tail -n 1 | cut -f 1)"
  if [ "$tail_pileup" == "MT" ]
  then
    mv [% pileup %].gz* [% opt.OUTPUT_DIR %]/[% sample %]/mapping/
    touch [% opt.OUTPUT_DIR %]/[% sample %]/logs/Pileup_[% sample %].done
    
    [% INCLUDE Status.tt step=sample status="success" %]
  else
    [% INCLUDE Status.tt step=sample status="failed" %]
    fail "[% pileup %].gz seems incomplete, it does not end with MT"
  fi
else
  [% INCLUDE Status.tt step=sample status="failed" %]
  fail "[% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] does not exist."
fi

echo "End pileup	$(date) [% bam %] $(uname -n)" >> [% opt.OUTPUT_DIR %]/[% sample %]/logs/[% sample %].log
