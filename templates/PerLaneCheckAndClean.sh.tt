#!/usr/bin/env bash
# -*- TT -*-
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

[% INCLUDE ErrorHandling.tt mode="harsh" %]

cd [% opt.OUTPUT_DIR %]/[% sampleName %]/mapping

echo "Start cleanup	" `date` "	 [% coreName %] 	" `uname -n` >> [% opt.OUTPUT_DIR %]/[% sampleName %]/logs/[% sampleName %].log

[% INCLUDE Status.tt step="" status="processing" %]

if [ -s [% coreName %].flagstat ] && [ -s [% coreName %]_sorted.flagstat ]; then
    flagstat_orig=$(awk '/d+/ { print $1; exit }' "[% coreName %].flagstat")
    flagstat_sort=$(awk '/d+/ { print $1; exit }' "[% coreName %]_sorted.flagstat")
    if [ $flagstat_orig -eq $flagstat_sort ]; then
        rm [% coreName %].bam
        touch [% opt.OUTPUT_DIR %]/[% sampleName %]/mapping/[% coreName %].done
        [% INCLUDE Status.tt step="" status="success" %]
    else
        [% INCLUDE Status.tt step="" status="failed" %]
        fail "[% coreName %].flagstat and [% coreName %]_sorted.flagstat do not have the same read counts"
    fi
else
    [% INCLUDE Status.tt step="" status="failed" %]
    fail "Either [% coreName %].flagstat or [% coreName %]_sorted.flagstat is empty."
fi

echo "End cleanup	" `date` "	 [% coreName %] 	" `uname -n` >> [% opt.OUTPUT_DIR %]/[% sampleName %]/logs/[% sampleName %].log
