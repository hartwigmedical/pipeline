#!/bin/sh
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

export JOB_NAME=RealignFS
export JOB_SET="[% runName %]"
export JOB_START=$(date +%s)

cd  [% opt.OUTPUT_DIR %]/[% sample %]/tmp

if [ -s [% opt.OUTPUT_DIR %]/[% sample %]/tmp/[% realignedBam %] ]; then
	[% INCLUDE Status.tt step=sample status="processing" %]
  
	[% opt.SAMBAMBA_PATH %]/sambamba flagstat -t [% opt.REALIGNMENT_THREADS %] [% opt.OUTPUT_DIR %]/[% sample %]/tmp/[% realignedBam %] > [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedFlagstat %]
fi

if [ -s [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% flagstat %]  ] && [ -s [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedFlagstat %] ]; then
	FS1=`grep -m 1 -P "\d+ " [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% flagstat %] | awk '{{split($0,columns , "+")} print columns[1]}'`
	FS2=`grep -m 1 -P "\d+ " [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedFlagstat %] | awk '{{split($0,columns , "+")} print columns[1]}'`
	if [ $FS1 -eq $FS2 ]; then
        mv [% opt.OUTPUT_DIR %]/[% sample %]/tmp/[% realignedBam %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBam %]
        mv [% opt.OUTPUT_DIR %]/[% sample %]/tmp/[% realignedBai %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBai %]
        cp [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBai %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBamBai %]
        mv [% opt.OUTPUT_DIR %]/[% sample %]/tmp/IndelRealigner.jobreport.txt [% opt.OUTPUT_DIR %]/[% sample %]/logs/IndelRealigner.jobreport.txt
        mv [% opt.OUTPUT_DIR %]/[% sample %]/tmp/IndelRealigner.jobreport.pdf [% opt.OUTPUT_DIR %]/[% sample %]/logs/IndelRealigner.jobreport.pdf

        [% opt.SAMBAMBA_PATH %]/sambamba view -f bam -o [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% cpctSlicedBam %] -L [% opt.PIPELINE_PATH %]/settings/slicing/CPCT_Slicing.bed [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBam %]
        [% opt.SAMBAMBA_PATH %]/sambamba index [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% cpctSlicedBam %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% cpctSlicedBamBai %]

        [% opt.SAMBAMBA_PATH %]/sambamba view -f bam -o [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedBam %] -L [% opt.PIPELINE_PATH %]/settings/slicing/HealthCheck_Slicing.bed [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedBam %]
        [% opt.SAMBAMBA_PATH %]/sambamba index [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedBam %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedBamBai %]
        [% opt.SAMBAMBA_PATH %]/sambamba flagstat -t [% opt.REALIGNMENT_THREADS %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedBam %] > [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedFlagstat %]

        [% opt.BAMUTIL_PATH %]/bam diff --in1 [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPostRealignSlicedBam %] --in2 [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPreRealignSlicedBam %]

		touch [% opt.OUTPUT_DIR %]/[% sample %]/logs/Realignment_[% sample %].done

  	    [% INCLUDE Status.tt step=sample status="success" %]
	else
		echo "ERROR: [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% flagstat %] and [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedFlagstat %] do not have the same read counts" >>../logs/Realignment_[% sample %].err

  	    [% INCLUDE Status.tt step=sample status="failed" %]
	fi
else
	echo "ERROR: Either [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% flagstat %] or [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% realignedFlagstat %] is empty." >> ../logs/Realignment_[% sample %].err

	[% INCLUDE Status.tt step=sample status="failed" %]
fi

echo "End indel realignment	" `date` "	[% sample %]_dedup.bam	" `uname -n` >> [% logDir %]/[% sample %].log
