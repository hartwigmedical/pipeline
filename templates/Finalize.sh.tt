#!/usr/bin/env bash
# -*- TT -*-
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

[% INCLUDE ErrorHandling.tt mode=opt.JOB_ERROR_MODE %]

export JOB_NAME JOB_SET JOB_START
JOB_NAME=Finalize
JOB_SET="[% opt.RUN_NAME %]"
JOB_START=$(date +%s)

[% INCLUDE Status.tt step="" status="processing" %]

failed=false
rm -f [% log_file %]

echo "Check and cleanup for run: [% opt.RUN_NAME %]" >> [% log_file %]
echo "Pipeline version: [% opt.VERSION %]" >> [% log_file %]
echo >> [% log_file %]

[%- FOREACH done_file IN done_files %]
echo -n "$(basename "[% done_file %]"): " >> [% log_file %]
if [ -f "[% done_file %]" ]
then
    echo "succeeded" >> [% log_file %]
else
    echo "failed" >> [% log_file %]
    failed=true
fi
[% END -%]

echo >> [% log_file %]


if [[ "${failed}" == "true" ]]
then
    echo "One or multiple step(s) of the pipeline failed." >> [% log_file %]
    mail -s "Pipeline FAILED [% opt.RUN_NAME %]" "[% opt.MAIL %]" < [% log_file %]
    [% INCLUDE Status.tt step="" status="failed" %]
else
    echo "The pipeline completed successfully." >> [% log_file %]
    find [% opt.OUTPUT_DIR %] -type d -name tmp -prune -exec rm -rf "{}" \;
    find [% dirs.log %] -size 0 -not -name "*.done" -delete
    find [% opt.OUTPUT_DIR %]/*/logs -size 0 -not -name "*.done" -delete
[% IF opt.SOMATIC_VARIANTS == "yes" -%]
    find [% opt.OUTPUT_DIR %]/somaticVariants/*/logs -size 0 -not -name "*.done" -delete
[% END -%]

[% IF opt.INDELREALIGNMENT == "yes" -%]
[% FOREACH sample IN opt.SAMPLES.keys -%]
    rm -f [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% sample %]_dedup.ba*
[% END -%]
[% END -%]

[% IF opt.BASEQUALITYRECAL == "yes" -%]
[% FOREACH sample IN opt.SAMPLES.keys -%]
    rm -f [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% sample %]_dedup.recalibrated.ba*
[% END -%]
[% END -%]

[% IF opt.SOMATIC_VARIANTS == "yes" && opt.SOMVAR_VARSCAN == "yes" && opt.FINALIZE_KEEP_PILEUP == "no" -%]
[% FOREACH sample IN opt.SAMPLES.keys -%]
    rm -f [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% sample %]*.pileup.gz
    rm -f [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% sample %]*.pileup.gz.tbi
[% END -%]
[% END -%]

[% IF opt.exists('EXTRAS') -%]
    cd [% opt.OUTPUT_DIR %]

    # genuine failures to produce artefacts should be caught elsewhere
    # providing empty files where tools are successful but produce no
    # output prevents tar from failing, failing the pipeline
    for artefact in "[% opt.EXTRAS.join('" "') %]"
    do
        if [ ! -e "$artefact" ]
        then
            touch "$artefact"
        fi
    done

    tar -zcf [% extras_tar %] [% opt.EXTRAS.join(' ') %]
    zip -r [% extras_zip %] [% opt.EXTRAS.join(' ') %]
[% END -%]

    mail -s "Pipeline DONE [% opt.RUN_NAME %]" "[% opt.MAIL %]" < [% log_file %]
    touch "[% dirs.log %]/PipelineCheck.done"
    [% INCLUDE Status.tt step="" status="success" %]
fi

# regardless of success, remove the lock: we are done
rm -f [% opt.OUTPUT_DIR %]/run.lock
