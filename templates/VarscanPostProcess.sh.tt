#!/usr/bin/env bash
# -*- TT -*-

[% INCLUDE ErrorHandling.tt mode=opt.JOB_ERROR_MODE %]
[% INCLUDE Logging.tt job_name="VarscanPostProcess" main_step=joint_name log_name="varscan.log" %]

cd "[% dirs.varscan.out %]"

[%- FOREACH snp_vcf IN snp_vcfs %]
[ -s "[% snp_vcf %]" ] && \
[%- END %]
[%- FOREACH indel_vcf IN indel_vcfs %]
[ -s "[% indel_vcf %]" ] && \
[%- END %]
true || failure "An input VCF does not exist."

[% opt.VCFTOOLS_PATH %]/vcf-concat "[% snp_vcfs.join('" "') %]" > "[% joint_name %].snp.vcf"
[% opt.VCFTOOLS_PATH %]/vcf-concat "[% indel_vcfs.join('" "') %]" > "[% joint_name %].indel.vcf"

java -Xmx[% opt.VARSCAN_MEM %]G -jar "[% opt.VARSCAN_PATH %]" processSomatic "[% joint_name %].indel.vcf" [% opt.VARSCAN_POSTSETTINGS %]
java -Xmx[% opt.VARSCAN_MEM %]G -jar "[% opt.VARSCAN_PATH %]" processSomatic "[% joint_name %].snp.vcf" [% opt.VARSCAN_POSTSETTINGS %]

java -Xmx[% opt.VARSCAN_MEM %]G \
    -jar "[% opt.GATK_PATH %]/GenomeAnalysisTK.jar" \
    -T CombineVariants \
    -R "[% opt.GENOME %]" \
    --genotypemergeoption unsorted \
    -o "[% final_vcf %]" \
    -V "[% joint_name %].snp.Somatic.hc.vcf" \
    -V "[% joint_name %].indel.Somatic.hc.vcf"

# to resolve merge conflict with FB vcfs
sed -i 's/SSC/VS_SSC/' "[% final_vcf %]"

[ -s "[% final_vcf %]" ] || failure "VarScan VCFs not present"
rm "[% snp_vcfs.join('" "') %]" "[% indel_vcfs.join('" "') %]"
success
