#!/usr/bin/env bash
# -*- TT -*-
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

[% INCLUDE ErrorHandling.tt mode=opt.JOB_ERROR_MODE %]

export JOB_NAME="GermlineAnnotation"
export JOB_SET="[% opt.RUN_NAME %]"
export JOB_START=$(date +%s)

bash [% opt.CLUSTER_PATH %]/settings.sh

cd [% opt.OUTPUT_DIR %]

echo "Start germline variant annotation	$(date)	[% in_vcf %]	$(uname -n)" >> [% opt.OUTPUT_DIR %]/logs/[% opt.RUN_NAME %].log

[% IF opt.ANNOTATE_SNPEFF == 'yes' %]

    [% out_vcf = in_vcf %]
    [% out_vcf = out_vcf.replace('.vcf', '_snpEff.vcf') %]

    if [ -s [% in_vcf %] ]; then
    [% INCLUDE Status.tt step="ANNOTATE_SNPEFF" status="processing" %]
    
    java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp \
        -jar [% opt.SNPEFF_PATH %]/snpEff.jar \
        -c [% opt.SNPEFF_PATH %]/snpEff.config \
        [% opt.ANNOTATE_DB %] \
        -v [% in_vcf %] [% opt.ANNOTATE_FLAGS %] \
        > [% out_vcf %]

    [% opt.IGVTOOLS_PATH %]/igvtools index [% out_vcf %]
    rm igv.log
    
    [% INCLUDE Status.tt step="ANNOTATE_SNPEFF" status="finished" %]
    else
        [% INCLUDE Status.tt step="ANNOTATE_SNPEFF" status="failed" %]
        fail "[% in_vcf %] does not exist."
    fi

    [% in_vcf = out_vcf %]
[% END %]

[% IF opt.ANNOTATE_SNPSIFT == 'yes' %]
    [% out_vcf = in_vcf %]
    [% out_vcf = out_vcf.replace('.vcf', '_snpSift.vcf') %]

    if [ -s [% in_vcf %] ]; then
    [% INCLUDE Status.tt step="ANNOTATE_SNPSIFT" status="processing" %]
    
    java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp \
        -jar [% opt.SNPEFF_PATH %]/SnpSift.jar \
        dbnsfp \
        -v \
        -f [% opt.ANNOTATE_FIELDS %] \
        -db [% opt.ANNOTATE_DBNSFP %] \
        [% in_vcf %] \
        > [% out_vcf %]

    [% opt.IGVTOOLS_PATH %]/igvtools index [% out_vcf %]
    rm igv.log
    
    [% INCLUDE Status.tt step="ANNOTATE_SNPSIFT" status="finished" %]
    else
        [% INCLUDE Status.tt step="ANNOTATE_SNPSIFT" status="failed" %]
        fail "[% in_vcf %] does not exist."
    fi
    [% IF opt.ANNOTATE_SNPEFF == 'yes' %]
    if [ -s [% out_vcf %] ]; then
        rm [% in_vcf %] [% in_vcf %].idx
    fi
    [% END %]
    [% in_vcf = out_vcf %]
[% END %]

[% IF opt.ANNOTATE_IDFIELD == 'yes' %]
    [% out_vcf = in_vcf %]
    [% suffix = '_' _ opt.ANNOTATE_IDNAME _ '.vcf' %]
    [% out_vcf = out_vcf.replace('.vcf', suffix) %]
    if [ -s [% in_vcf %] ]; then
    [% INCLUDE Status.tt step="ANNOTATE_IDFIELD" status="processing" %]
    
    java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp \
        -jar [% opt.GATK_PATH %]/GenomeAnalysisTK.jar \
        -T VariantAnnotator \
        -nt [% opt.ANNOTATE_THREADS %] \
        -R [% opt.GENOME %] \
        -o [% out_vcf %] \
        --variant [% in_vcf %] \
        --dbsnp [% opt.ANNOTATE_IDDB %] \
        --alwaysAppendDbsnpId
          
    [% INCLUDE Status.tt step="ANNOTATE_IDFIELD" status="finished" %]
    else
        [% INCLUDE Status.tt step="ANNOTATE_IDFIELD" status="failed" %]
        fail "[% in_vcf %] does not exist."
    fi
    [% IF opt.ANNOTATE_SNPSIFT == 'yes' %]
    if [ -s [% out_vcf %] ]; then
        rm [% in_vcf %] [% in_vcf %].idx
    fi
    [% END %]
    [% in_vcf = out_vcf %]
[% END %]

[% IF opt.ANNOTATE_FREQUENCIES == 'yes' %]
    [% out_vcf = in_vcf %]
    [% suffix = '_' _ opt.ANNOTATE_FREQNAME _ '.vcf' %]
    [% out_vcf = out_vcf.replace('.vcf', suffix) %]
    if [ -s [% in_vcf %] ]; then
        [% INCLUDE Status.tt step="ANNOTATE_FREQUENCIES" status="processing" %]

        java -Xmx[% opt.ANNOTATE_MEM %]g -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/tmp \
            -jar [% opt.SNPEFF_PATH %]/SnpSift.jar \
            annotate \
            -tabix \
            -name [% opt.ANNOTATE_FREQNAME %]_ \
            -info [% opt.ANNOTATE_FREQINFO %] \
            [% opt.ANNOTATE_FREQDB %] \
            [% in_vcf %] \
            > [% out_vcf %]

        [% opt.IGVTOOLS_PATH %]/igvtools index [% out_vcf %]
        rm igv.log
    
        [% INCLUDE Status.tt step="ANNOTATE_FREQUENCIES" status="finished" %]
    else
        [% INCLUDE Status.tt step="ANNOTATE_FREQUENCIES" status="failed" %]
        fail "[% in_vcf %] does not exist."
    fi
    [% IF opt.ANNOTATE_SNPSIFT == 'yes' OR opt.ANNOTATE_SNPEFF == 'yes' OR opt.ANNOTATE_IDFIELD == 'yes' %]
    if [ -s [% out_vcf %] ]; then
        rm [% in_vcf %] [% in_vcf %].idx
    fi
    [% END %]
    [% in_vcf = out_vcf %]
[% END %]

### KODU: Slice the final annotated VCF for CPCT purposes.
[% slicedvcf = in_vcf.replace('.vcf', '_sliced.vcf') %]

[% INCLUDE Status.tt step="ANNOTATE_SLICE" status="processing" %]

java -Xmx8G -jar [% opt.SNPEFF_PATH %]/SnpSift.jar intervals [% opt.OUTPUT_DIR %]/settings/slicing/CPCT_Slicing.bed -i [% in_vcf %] > [% slicedvcf %]

[% INCLUDE Status.tt step="ANNOTATE_SLICE" status="finished" %]

### Check final vcf, last chr and start position must be identical.
tail_input="$(tail -n 1 [% pre_annotated_vcf %] | cut -f 1,2)"
tail_output="$(tail -n 1 [% out_vcf %] | cut -f 1,2)"
if [ -s [% pre_annotated_vcf %] -a -s [% out_vcf %] -a "$tail_input" == "$tail_output" ]; then
    mv "[% out_vcf %]" "[% annotated_vcf %]"
    mv "[% out_vcf %].idx" "[% annotated_vcf %].idx"
    ln -rs "[% annotated_vcf %]" "[% out_vcf %]"
    ln -rs "[% annotated_vcf %].idx" "[% out_vcf %].idx"
    touch [% opt.OUTPUT_DIR %]/logs/GermlineAnnotation.done
    [% INCLUDE Status.tt step="" status="success" %]
else
    [% INCLUDE Status.tt step="" status="failed" %]
    fail "Annotated VCF does not exist or last position differs from pre-annotation VCF"
fi

echo "End germline variant annotation	$(date)	[% in_vcf %]	$(uname -n)" >> [% opt.OUTPUT_DIR %]/logs/[% opt.RUN_NAME %].log
