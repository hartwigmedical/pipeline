#!/usr/bin/env bash
# -*- TT -*-
#
# Template used by the Template Toolkit. See: http://template-toolkit.org/
#

[% INCLUDE ErrorHandling.tt mode="harsh" %]

export JOB_NAME=Realign
export JOB_SET="[% runName %]"
export JOB_START=$(date +%s)

source [% opt.CLUSTER_PATH %]/settings.sh

cd [% opt.OUTPUT_DIR %]/[% sample %]/tmp

[% INCLUDE Status.tt step=sample status="processing" %]

echo "Start indel realignment	" `date` "	[% bam %] 	" `uname -n` >> [% logDir %]/[% sample %].log

if [ -f [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] ]; then
    [% opt.SAMBAMBA_PATH %]/sambamba view -f bam -o [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPreRealignSlicedBam %] -L [% opt.OUTPUT_DIR %]/settings/slicing/HealthCheck_Slicing.bed [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %]
    [% opt.SAMBAMBA_PATH %]/sambamba index [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPreRealignSlicedBam %] [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% healthCheckPreRealignSlicedBamBai %]

    java -Xmx[% opt.REALIGNMENT_MASTER_MEM %]G -Djava.io.tmpdir=[% opt.OUTPUT_DIR %]/[% sample %]/tmp -jar [% opt.QUEUE_PATH %]/Queue.jar -R [% opt.GENOME %] -S [% opt.OUTPUT_DIR %]/QScripts/[% opt.REALIGNMENT_SCALA %] -jobQueue [% opt.REALIGNMENT_QUEUE %] \
        -nt [% opt.REALIGNMENT_THREADS %] -mem [% opt.REALIGNMENT_MEM %] -nsc [% opt.REALIGNMENT_SCATTER %] -jobNative "[% jobNative %]" [% knownIndelFiles %] \
        -run -I [% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] -jobRunner GridEngine
  
    [% INCLUDE Status.tt step=sample status="finished" %]
else
    [% INCLUDE Status.tt step=sample status="failed" %]
    fail "[% opt.OUTPUT_DIR %]/[% sample %]/mapping/[% bam %] does not exist."
fi
