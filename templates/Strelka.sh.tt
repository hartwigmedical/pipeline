#!/usr/bin/env bash
# -*- TT -*-

[% INCLUDE ErrorHandling.tt %]
[% INCLUDE Logging.tt job_name="Strelka" main_step=joint_name log_name="strelka.log" %]

assert_not_empty "[% ref_bam_path %]" "[% tumor_bam_path %]"

rm -rf "[% dirs.strelka.out %]"

if [ -f "[% opt.OUTPUT_DIR %]/structuralVariants/manta/[% joint_name %]/results/variants/candidateSmallIndels.vcf.gz" ]
then
[% opt.STRELKA_PATH %]/bin/configureStrelkaSomaticWorkflow.py \
    --tumorBam "[% tumor_bam_path %]" \
    --normalBam "[% ref_bam_path %]" \
    --referenceFasta "[% opt.GENOME %]" \
    --indelCandidates "[% opt.OUTPUT_DIR %]/structuralVariants/manta/[% joint_name %]/results/variants/candidateSmallIndels.vcf.gz" \
    --config "[% opt.OUTPUT_DIR %]/settings/strelka/[% opt.STRELKA_INI %]" \
    --runDir "[% dirs.strelka.out %]"
else
echo "WARNING no MANTA candidateSmallIndels.vcf.gz found, reverting to defaults (less accurate)"
[% opt.STRELKA_PATH %]/bin/configureStrelkaSomaticWorkflow.py \
    --tumorBam "[% tumor_bam_path %]" \
    --normalBam "[% ref_bam_path %]" \
    --referenceFasta "[% opt.GENOME %]" \
    --config "[% opt.OUTPUT_DIR %]/settings/strelka/[% opt.STRELKA_INI %]" \
    --runDir "[% dirs.strelka.out %]"
fi

cd "[% dirs.strelka.out %]"
./runWorkflow.py -m local -j [% opt.STRELKA_THREADS %]

assert_exists "[% dirs.strelka.out %]/workflow.exitcode.txt"
if [[ $(< "[% dirs.strelka.out %]/workflow.exitcode.txt") != "0" ]]; then fail "Strelka2 variant caller error"; fi
assert_not_empty "results/variants/somatic.snvs.vcf.gz" "results/variants/somatic.indels.vcf.gz" 

java -Xmx[% opt.STRELKA_MEM %]G \
    -jar "[% opt.GATK_PATH %]/GenomeAnalysisTK.jar" \
    -T CombineVariants \
    -R "[% opt.GENOME %]" \
    --genotypemergeoption unsorted \
    -V:snvs "results/variants/somatic.snvs.vcf.gz" \
    -V:indels "results/variants/somatic.indels.vcf.gz" \
    -o "[% final_vcf %]"

assert_not_empty "[% final_vcf %]"

awk -F'\t' -v OFS='\t' '
    /^#CHROM/ { print "##StrelkaGATKCompatibility=Added GT fields to strelka calls for gatk compatibility."; }
    /^##FORMAT/ { if (!formatTagFound) { formatTagFound++; print "##FORMAT=<ID=GT,Number=1,Type=String,Description=\"Genotype\">";} }  
    /^[^#]/ { $9 = "GT:" $9; $10 = "0/0:" $10; $11 = "0/1:" $11; }
    { print }' \
    "[% final_vcf %]" \
    | [% opt.OUTPUT_DIR %]/scripts/filterStrelka.py \
        > "[% final_vcf %].tmp"

mv "[% final_vcf %].tmp" "[% final_vcf %]"
success
